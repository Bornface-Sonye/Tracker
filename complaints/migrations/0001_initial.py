# Generated by Django 4.2.7 on 2024-11-13 01:44

import complaints.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('year_id', models.AutoField(primary_key=True, serialize=False)),
                ('academic_year', models.CharField(help_text='Please Enter Academic Year', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_code', models.CharField(help_text='Please Enter Course Code', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('course_name', models.CharField(help_text='Please Enter Course Name', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dep_code', models.CharField(help_text='Please Enter Department Code', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('dep_name', models.CharField(help_text='Please Enter Department Name', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('lec_no', models.CharField(help_text='Please Enter Lecturer Number', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('email_address', models.EmailField(help_text='Please Enter Lecturer Email Address', max_length=200)),
                ('username', models.EmailField(help_text='Enter a valid Username', max_length=200, unique=True)),
                ('first_name', models.CharField(help_text='Please Enter Student First Name', max_length=200)),
                ('last_name', models.CharField(help_text='Please Enter Student Last Name', max_length=200)),
                ('phone_number', models.CharField(help_text='Enter phone number in the format 0798073204 or +254798073404', max_length=13, validators=[complaints.validators.validate_kenyan_phone_number])),
                ('role', models.CharField(choices=[('Member', 'Member'), ('Exam Officer', 'Exam Officer'), ('COD', 'COD')], max_length=50)),
                ('dep_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.department')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_code', models.CharField(help_text='Please Enter School Code', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('school_name', models.CharField(help_text='Please Enter School Name', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='System_User',
            fields=[
                ('username', models.CharField(help_text='Enter a valid Username', max_length=50, primary_key=True, serialize=False, unique=True)),
                ('password_hash', models.CharField(help_text='Enter a valid password', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('unit_code', models.CharField(help_text='Please Enter Unit Code', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('unit_name', models.CharField(help_text='Please Enter Unit Name', max_length=200)),
                ('dep_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.department')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('reg_no', models.CharField(help_text='Please Enter Student Registration Number', max_length=200, primary_key=True, serialize=False, unique=True, validators=[complaints.validators.validate_reg_no])),
                ('username', models.CharField(help_text='Enter a valid Username', max_length=200, unique=True)),
                ('first_name', models.CharField(help_text='Please Enter Student First Name', max_length=200)),
                ('last_name', models.CharField(help_text='Please Enter Student Last Name', max_length=200)),
                ('email_address', models.EmailField(help_text='Please Enter Student Email Address', max_length=200)),
                ('phone_number', models.CharField(help_text='Enter phone number in the format 0798073204 or +254798073404', max_length=13, validators=[complaints.validators.validate_kenyan_phone_number])),
                ('course_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.course')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)])),
                ('exam', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(70)])),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.academicyear')),
                ('reg_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.student')),
                ('unit_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('response_code', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('response', models.CharField(choices=[('No Result', 'No Result'), ('No CAT Mark', 'No CAT Mark'), ('No Exam Mark', 'No Exam Mark'), ('Result Loaded', 'Result Loaded')], help_text='Select a response', max_length=100)),
                ('cat', models.CharField(default='-', help_text='Enter Cat Mark or -', max_length=3)),
                ('exam', models.CharField(default='-', help_text='Enter Exam Mark or -', max_length=3)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.academicyear')),
                ('reg_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.student')),
                ('responder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.lecturer')),
                ('unit_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_available', models.DecimalField(decimal_places=2, max_digits=10)),
                ('complaints_remaining', models.IntegerField()),
                ('reg_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.student')),
            ],
        ),
        migrations.CreateModel(
            name='NominalRoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.academicyear')),
                ('reg_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.student')),
                ('unit_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.unit')),
            ],
        ),
        migrations.CreateModel(
            name='LecturerUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.academicyear')),
                ('course_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.course')),
                ('lec_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.lecturer')),
                ('unit_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.unit')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='school_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.school'),
        ),
        migrations.AddField(
            model_name='course',
            name='dep_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.department'),
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('complaint_code', models.CharField(help_text='Please Enter Complaint Code', max_length=100, primary_key=True, serialize=False, unique=True)),
                ('missing_mark', models.CharField(choices=[('CAT', 'CAT'), ('EXAM', 'EXAM'), ('ALL', 'ALL')], max_length=20)),
                ('exam_date', models.DateField(help_text='Enter Main Exam Date, [dd, mm, yy]')),
                ('description', models.TextField(help_text='Please Enter Description')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('academic_year', models.ForeignKey(blank=True, default=None, help_text='Select Academic Year', null=True, on_delete=django.db.models.deletion.SET_NULL, to='complaints.academicyear')),
                ('reg_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.student')),
                ('unit_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.unit')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovedResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat', models.CharField(default='-', help_text='Enter Cat Mark or -', max_length=3)),
                ('exam', models.CharField(default='-', help_text='Enter Exam Mark or -', max_length=3)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.academicyear')),
                ('reg_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.student')),
                ('unit_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='complaints.unit')),
            ],
        ),
        migrations.AddConstraint(
            model_name='result',
            constraint=models.UniqueConstraint(fields=('unit_code', 'reg_no', 'academic_year'), name='unique_result_per_unit_student_year'),
        ),
        migrations.AddConstraint(
            model_name='response',
            constraint=models.UniqueConstraint(fields=('reg_no', 'unit_code'), name='unique_response_per_student_unit'),
        ),
        migrations.AddConstraint(
            model_name='nominalroll',
            constraint=models.UniqueConstraint(fields=('unit_code', 'reg_no', 'academic_year'), name='unique_nominal_roll_per_unit_student_year'),
        ),
        migrations.AddConstraint(
            model_name='complaint',
            constraint=models.UniqueConstraint(fields=('unit_code', 'reg_no'), name='unique_complaint_per_unit_student'),
        ),
        migrations.AddConstraint(
            model_name='approvedresponse',
            constraint=models.UniqueConstraint(fields=('reg_no', 'unit_code'), name='unique_approved_response_per_student_unit'),
        ),
    ]
